[{"/Users/garethhind/Documents/Github Repos/framework-guides/react-sass/src/index.js":"1","/Users/garethhind/Documents/Github Repos/framework-guides/react-sass/src/reportWebVitals.js":"2","/Users/garethhind/Documents/Github Repos/framework-guides/react-sass/src/App.js":"3","/Users/garethhind/Documents/Github Repos/betting-app/src/index.js":"4","/Users/garethhind/Documents/Github Repos/betting-app/src/App.js":"5","/Users/garethhind/Documents/Github Repos/betting-app/src/components/SearchBar/SearchBar.js":"6","/Users/garethhind/Documents/Github Repos/betting-app/src/components/Output/Output.js":"7"},{"size":501,"mtime":1610258391424,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610257235642,"results":"10","hashOfConfig":"9"},{"size":529,"mtime":1610258379273,"results":"11","hashOfConfig":"9"},{"size":221,"mtime":1610278816244,"results":"12","hashOfConfig":"13"},{"size":7827,"mtime":1614857738885,"results":"14","hashOfConfig":"13"},{"size":2185,"mtime":1614756404893,"results":"15","hashOfConfig":"13"},{"size":3751,"mtime":1611190344847,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"jm0cmy",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"ao6uhe",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/garethhind/Documents/Github Repos/framework-guides/react-sass/src/index.js",[],["36","37"],"/Users/garethhind/Documents/Github Repos/framework-guides/react-sass/src/reportWebVitals.js",[],"/Users/garethhind/Documents/Github Repos/framework-guides/react-sass/src/App.js",[],["38","39"],"/Users/garethhind/Documents/Github Repos/betting-app/src/index.js",[],["40","41"],"/Users/garethhind/Documents/Github Repos/betting-app/src/App.js",["42"],"import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport { SearchBar } from './components/SearchBar/SearchBar'\n// import { Output } from './components/Output/Output'\n\nfunction App() {\n  const [ oddsObject, setOddsObject ] = useState([])\n  const [ allCompNames, setAllCompNames ] = useState([])\n  const [ compNames, setCompNames ] = useState([])\n\n  const APIkey = '0964ad4e3be969508766aef582e92012';\n\n  // let markets = [ \"h2h\", \"spreads\", \"totals\" ]\n\n  useEffect( () => {\n    async function loadOdds() {\n      const response = await fetch(\n        `https://api.the-odds-api.com/v3/odds/?sport=upcoming&region=au&mkt=h2h&apiKey=${APIkey}`\n      );\n      response.json()\n        .then((data) => {\n          console.log(data.data);\n          setOddsObject(data.data)\n          console.table(oddsObject);\n        })\n        .catch(err => console.log(err));\n    }\n    loadOdds()\n    getOdds()\n  }, [])\n\n\n  const getOdds = () => {\n    console.log(\"this ran\");\n    fetch(`https://api.the-odds-api.com/v3/sports?apiKey=${APIkey}`)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(\"data received\");\n      console.table(data.data);\n      displaySportOptions(data);\n    });  \n  }\n\n  const displaySportOptions = (data) => {\n    const sportNames = []\n    data.data.forEach((sport) => {\n      setAllCompNames((oldArray) => [...oldArray, sport.group])\n    })\n\n    allCompNames.forEach(name => {\n      if (sportNames.indexOf(name) === -1) {\n        sportNames.push(name);\n      }      \n    })\n    setCompNames(sportNames)\n    console.log(sportNames);\n  }\n\n  // const getSportNames = (value, index, self) => {\n  //   return self.indexOf(value) === index;\n  // }\n\n  const timeConverter = (UNIX_timestamp) => {\n    let a = new Date(UNIX_timestamp * 1000);\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let day = a.getDate();\n    let hour = a.getHours();\n    let min = (\"0\" + a.getMinutes()).slice(-2);\n    // let sec = a.getSeconds();\n    let time = day + ' ' + month + ' ' + year + ' ' + hour + ':' + min;\n    return time;\n}\n\nconst highestHomeBookmaker = (events) => {\n  let homeArrayObject = {}\n  events.forEach(site => {\n    homeArrayObject[site.site_key] = site.odds.h2h[0]\n  })\n  let highestHomeArrayObject = Object.keys(homeArrayObject).reduce((acc, curr) => homeArrayObject[acc] > homeArrayObject[curr] ? acc : curr)\n\n  return highestHomeArrayObject\n}\n\nconst highestHomeOdds = (events) => {\n  let homeArrayObject = {}\n  events.forEach(site => {\n    homeArrayObject[site.site_key] = site.odds.h2h[0]\n  })\n  let highestHomeArrayObject = Object.keys(homeArrayObject).reduce((acc, curr) => homeArrayObject[acc] > homeArrayObject[curr] ? acc : curr)\n\n  return homeArrayObject[highestHomeArrayObject]\n}\n\nconst highestAwayBookmaker = (events) => {\n  let awayArrayObject = {}\n  events.forEach(site => {\n    awayArrayObject[site.site_key] = site.odds.h2h[1]\n  })\n  let highestAwayArrayObject = Object.keys(awayArrayObject).reduce((acc, curr) => awayArrayObject[acc] > awayArrayObject[curr] ? acc : curr)\n\n  return highestAwayArrayObject\n}\n\nconst highestAwayOdds = (events) => {\n  let awayArrayObject = {}\n  events.forEach(site => {\n    awayArrayObject[site.site_key] = site.odds.h2h[1]\n  })\n  let highestAwayArrayObject = Object.keys(awayArrayObject).reduce((acc, curr) => awayArrayObject[acc] > awayArrayObject[curr] ? acc : curr)\n\n  return awayArrayObject[highestAwayArrayObject]\n}\n\nconst highestDrawBookmaker = (events) => {\n  let drawArrayObject = {}\n  events.forEach(site => {\n    drawArrayObject[site.site_key] = site.odds.h2h[2]\n  })\n  let highestDrawArrayObject = Object.keys(drawArrayObject).reduce((acc, curr) => drawArrayObject[acc] > drawArrayObject[curr] ? acc : curr)\n\n  return highestDrawArrayObject\n}\n\nconst highestDrawOdds = (events) => {\n  let drawArrayObject = {}\n  events.forEach(site => {\n    drawArrayObject[site.site_key] = site.odds.h2h[2]\n  })\n  let highestDrawArrayObject = Object.keys(drawArrayObject).reduce((acc, curr) => drawArrayObject[acc] > drawArrayObject[curr] ? acc : curr)\n\n  return drawArrayObject[highestDrawArrayObject]\n}\n\n\n\n  const displayEvents = oddsObject.map((event) => {\n    if(event.sites[0].odds.h2h.length > 2) {\n          return (\n          <>\n            <tr>\n              <td rowSpan=\"3\">{timeConverter(event.commence_time)}</td>\n              <td rowSpan=\"3\">{event.sport_nice}</td>\n              <td>{event.teams[0]}</td>\n              <td>\n                <img className=\"img\" src={require(`../src/img/bookmakers_side/${highestHomeBookmaker(event.sites)}.svg`).default} alt={highestHomeBookmaker(event.sites)}/>\n                {/* {highestHomeBookmaker(event.sites)} */}\n              </td>\n              <td>${highestHomeOdds(event.sites)}</td>\n            </tr>\n            <tr>\n              {/* <td style={{ display: \"none\"}}></td> */}\n              {/* <td style={{ display: \"none\"}}></td> */}\n              <td>{event.teams[1]}</td>\n              <td>\n                <img className=\"img\" src={require(`../src/img/bookmakers_side/${highestAwayBookmaker(event.sites)}.svg`).default} alt={highestAwayBookmaker(event.sites)}/>\n                {/* {highestAwayBookmaker(event.sites)} */}\n              </td>\n              <td>${highestAwayOdds(event.sites)}</td>\n            </tr>\n            <tr>\n              {/* <td style={{ display: \"none\"}}></td> */}\n              {/* <td style={{ display: \"none\"}}></td> */}\n              <td>Draw</td>\n              <td>\n                <img className=\"img\" src={require(`../src/img/bookmakers_side/${highestDrawBookmaker(event.sites)}.svg`).default} alt={highestDrawBookmaker(event.sites)}/>\n                {/* {highestDrawBookmaker(event.sites)} */}\n              </td>\n              <td>${highestDrawOdds(event.sites)}</td>\n            </tr>\n          </>\n\n          )\n      } else {\n        return (\n            <>\n            <tr>\n              <td rowSpan=\"2\">{timeConverter(event.commence_time)}</td>\n              <td rowSpan=\"2\">{event.sport_nice}</td>\n              <td>{event.teams[0]}</td>\n              <td>\n                <img className=\"img\" src={require(`../src/img/bookmakers_side/${highestHomeBookmaker(event.sites)}.svg`).default} alt={highestHomeBookmaker(event.sites)}/>\n                {/* {highestHomeBookmaker(event.sites)} */}\n              </td>\n              <td>${highestHomeOdds(event.sites)}</td>\n            </tr>\n            <tr>\n              {/* <td style={{ display: \"none\"}}></td> */}\n              {/* <td style={{ display: \"none\"}}></td> */}\n              <td>{event.teams[1]}</td>\n              <td>\n                <img className=\"img\" src={require(`../src/img/bookmakers_side/${highestAwayBookmaker(event.sites)}.svg`).default} alt={highestAwayBookmaker(event.sites)}/>\n                {/* {highestAwayBookmaker(event.sites)} */}\n              </td>\n              <td>${highestAwayOdds(event.sites)}</td>\n            </tr>\n          </>\n      )   \n    }\n  })\n\n  console.log(\"display all comp names: \", allCompNames);\n  console.log(\"display comp names: \", compNames);\n  console.table(\"display odds object: \", oddsObject);\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <SearchBar compNames={compNames} />\n      </header>\n      <table>\n        <thead>\n          <tr>\n          <th scope=\"col\">Start Time</th>\n          <th scope=\"col\">Competitions</th>\n          <th scope=\"col\">Teams</th>\n          <th scope=\"col\">Bookmakers</th>\n          <th scope=\"col\">Odds</th>\n          </tr>\n        </thead>\n        <tbody>\n          {displayEvents} \n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/garethhind/Documents/Github Repos/betting-app/src/components/SearchBar/SearchBar.js",["43"],"/Users/garethhind/Documents/Github Repos/betting-app/src/components/Output/Output.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"46","replacedBy":"52"},{"ruleId":"48","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":31,"column":6,"nodeType":"56","endLine":31,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"46","replacedBy":"62"},{"ruleId":"48","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],["64"],["65"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getOdds' and 'oddsObject'. Either include them or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [getOdds, oddsObject]",{"range":"69","text":"70"},[917,919],"[getOdds, oddsObject]"]